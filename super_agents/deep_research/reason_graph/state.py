import operator
from typing import TypedDict, List, Optional, Annotated, Dict, Any, Literal

# Use relative import to access schemas defined within the same package
from super_agents.deep_research.reason_graph.schemas import (
    ResearchPlan,
    SearchStepResult,
    GapAnalysisResult,
    FinalSynthesisResult,
    StreamUpdate,
    StepInfo,
    SearchQuery,
)

class ResearchState(TypedDict):
    """
    Represents the state of the research graph execution.
    It holds inputs, intermediate results, and final outputs.
    """
    # --- Inputs ---
    topic: str
    depth: Literal['basic', 'advanced']

    # --- Planning Phase ---
    research_plan: Optional[ResearchPlan]
    search_steps_planned: List[StepInfo] # Flat list of all searches to execute
    analysis_steps_planned: List[StepInfo] # List of analyses to execute

    # --- Execution Tracking ---
    current_search_step_index: int # Index for iterating through search_steps_planned
    current_analysis_step_index: int # Index for iterating through analysis_steps_planned
    current_gap_search_index: int # Index for iterating through additional_queries_planned

    # --- Accumulated Results ---
    # Use Annotated and operator.add to append results instead of replacing the list
    search_results: Annotated[List[SearchStepResult], operator.add]

    # --- Analysis & Synthesis Results ---
    gap_analysis: Optional[GapAnalysisResult]
    # List of queries generated by gap analysis for advanced depth
    additional_queries_planned: List[SearchQuery]
    final_synthesis: Optional[FinalSynthesisResult] # Result of final synthesis if advanced depth

    # --- Streaming & Progress ---
    # Use Annotated and operator.add to append updates
    stream_updates: Annotated[List[StreamUpdate], operator.add]
    completed_steps_count: int # Counter for completed steps (searches, analyses, gap, synthesis)
    total_steps: int # Total number of steps calculated after planning (may update after gap analysis)

    # --- Final Output ---
    final_report_markdown: Optional[str] # Add this field